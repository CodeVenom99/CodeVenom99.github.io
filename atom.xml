<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Code Venom&#39;s Blog</title>
  
  <subtitle>在隆冬，我终于知道，我身上有一个不可战胜的夏天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-20T11:58:45.231Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>徐胜</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安装keil相关程序</title>
    <link href="http://yoursite.com/2019/08/20/%E5%AE%89%E8%A3%85keil%E7%9B%B8%E5%85%B3%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2019/08/20/安装keil相关程序/</id>
    <published>2019-08-20T09:11:45.000Z</published>
    <updated>2019-08-20T11:58:45.231Z</updated>
    
    <content type="html"><![CDATA[<p><strong>win10 （家庭中文版）操作系统之下</strong></p><p>链接: <a href="https://pan.baidu.com/s/1VpSV5s_0LpdesD3DdXPSBQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1VpSV5s_0LpdesD3DdXPSBQ</a> 提取码: meva </p><a id="more"></a><p><strong>Keil5</strong></p><p>1.双击mdk514.exe，设置路径。安装路径为全英文，不要有空格</p><p>2.输入信息，随便填</p><p>3.跳出ulink，选择允许</p><p>4.安装成功后会弹出安装芯片包的界面，直接关掉，不用在线安装</p><p>5.双击    Keil.STM32F4xx_DFP.1.0.8    和    Keil.STM32F1xx_DFP.1.0.5    安装芯片包</p><p>6.检查，随便打开一个工程编译，编译成功即为安装成功</p><p><strong>keygen</strong><br>这个软件用于破解keil5<br>1）打开MDK（注意：WIN7以及以上系统，请点击MDK图标，右键-》以管理员权限打开）<br>2）点击MDK中菜单：File-&gt;License Management，调出注册管理界面<br>3）复制下面界面的CID</p><img src="/2019/08/20/安装keil相关程序/4.png" title="This is an image"><p>4）打开解压后的Keygen.exe,CID选项里面填入上一步复制的CID。其他选项按下图填写即可</p><img src="/2019/08/20/安装keil相关程序/3.png" title="This is an image"><p>5）最后点击：generate，生成License ID。<br>6）把生成的Licese ID添加到MDK中。如下图</p><img src="/2019/08/20/安装keil相关程序/2.png" title="This is an image"><p>7）添加成功。</p><p><strong>st-link：</strong><br>1.选择dpinst_amd64.exe安装，如果成功就ok，不成功第二步<br>2.卸载第一步安装后，安装dpinst_x86.exe即可<br>3.最后显示两个绿色的勾，及成功</p><img src="/2019/08/20/安装keil相关程序/1.png" title="This is an image"><p><strong>jlink</strong><br>1.双击Setup_JLink_V490.exe，一直点击next<br>2.最后勾选MDK即可</p><p><strong>CH341SER</strong><br>双击CH341SER.EXE，一直点击next，<br>显示“驱动预安装成功”即可，插上usb，再装驱动</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;win10 （家庭中文版）操作系统之下&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;链接: &lt;a href=&quot;https://pan.baidu.com/s/1VpSV5s_0LpdesD3DdXPSBQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pan.baidu.com/s/1VpSV5s_0LpdesD3DdXPSBQ&lt;/a&gt; 提取码: meva &lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>换了电脑如何使用hexo继续写博客</title>
    <link href="http://yoursite.com/2019/08/20/%E6%8D%A2%E4%BA%86%E7%94%B5%E8%84%91%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E7%BB%A7%E7%BB%AD%E5%86%99%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/08/20/换了电脑如何使用hexo继续写博客/</id>
    <published>2019-08-20T06:56:22.000Z</published>
    <updated>2019-08-20T07:39:53.482Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.首先安装node和git</strong></p><p><strong>2.将你原来电脑上个人博客目录下必要文件拷到你的新电脑上</strong>（比如F:/Blog目录下），注意无需拷全部，只拷如下几个目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">_config.yml</span><br><span class="line">package.json</span><br><span class="line">scaffolds/ </span><br><span class="line">source/ </span><br><span class="line">themes/</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>3.安装镜像文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p><strong>4.安装hexo</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><img src="/2019/08/20/换了电脑如何使用hexo继续写博客/1.jpg" title="This is an image"><p><strong>5.输入</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>结果发生错误，按照提示输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure><p>再输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>检验，成功</p><img src="/2019/08/20/换了电脑如何使用hexo继续写博客/2.jpg" title="This is an image"><p><strong>6.依次输入</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><img src="/2019/08/20/换了电脑如何使用hexo继续写博客/3.jpg" title="This is an image"><p><strong>7.输入</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>可在本地    <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>    查看</p><img src="/2019/08/20/换了电脑如何使用hexo继续写博客/4.jpg" title="This is an image"><p><strong>8.这时候的博客根目录下是没有 .deploy_git的需要先输入</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>这样就有 .deploy_git文件了</p><img src="/2019/08/20/换了电脑如何使用hexo继续写博客/6.jpg" title="This is an image"><p>出现问题，大概就是要亮明身份</p><img src="/2019/08/20/换了电脑如何使用hexo继续写博客/5.jpg" title="This is an image"><p>解决办法：</p><p>找到工程目录 .deploy_git下的.git文件夹（隐藏文件），打开之后找到config文件，在最后边加上一句话</p><p>[user]<br>    email = your email<br>    name = your name</p><p>your email 和 your name填自己信息</p><p><strong>9.重新输入</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>成功</p><p>感谢：</p><p><a href="https://blog.csdn.net/liufangbaishi2014/article/details/50037507" target="_blank" rel="noopener">https://blog.csdn.net/liufangbaishi2014/article/details/50037507</a></p><p><a href="https://www.cnblogs.com/study-everyday/p/8902136.html" target="_blank" rel="noopener">https://www.cnblogs.com/study-everyday/p/8902136.html</a></p><p>两位的帮助</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1.首先安装node和git&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.将你原来电脑上个人博客目录下必要文件拷到你的新电脑上&lt;/strong&gt;（比如F:/Blog目录下），注意无需拷全部，只拷如下几个目录：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;_config.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;package.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scaffolds/ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source/ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;themes/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Matlab画图</title>
    <link href="http://yoursite.com/2019/08/18/Matlab%E7%94%BB%E5%9B%BE/"/>
    <id>http://yoursite.com/2019/08/18/Matlab画图/</id>
    <published>2019-08-18T09:03:36.000Z</published>
    <updated>2019-08-18T10:35:07.436Z</updated>
    
    <content type="html"><![CDATA[<h4 id="annotation"><a href="#annotation" class="headerlink" title="annotation"></a><strong>annotation</strong></h4><p>annotation(‘arrow’,x,y)%建立从(x(1), y(1))到(x(2), y(2))的箭头注释对象。</p><p>如：</p><p>annotation(‘arrow’,[0.3 0.2],[0.5 0.45]);<br>表示在坐标（0.2，0.45）（0.3，0.5）加箭头，前面两个值是横坐标，后面两个值是纵坐标。</p><p><strong>注意：annotation对象的父对象是figure对象，上面提到的坐标x，y是标准化的坐标，即整个图形窗口（figure对象）左下角为(0,  0)，右上角为(1,  1)。宽度w和高度h也都是标准化的，其取值在[0,  1]之间。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;annotation&quot;&gt;&lt;a href=&quot;#annotation&quot; class=&quot;headerlink&quot; title=&quot;annotation&quot;&gt;&lt;/a&gt;&lt;strong&gt;annotation&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;annotation(‘arrow’,x,
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git分支和标标签</title>
    <link href="http://yoursite.com/2019/08/17/Git%E5%88%86%E6%94%AF%E5%92%8C%E6%A0%87%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2019/08/17/Git分支和标标签/</id>
    <published>2019-08-17T15:36:03.000Z</published>
    <updated>2019-08-17T16:09:18.436Z</updated>
    
    <content type="html"><![CDATA[<h4 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h4><p>开发项目过程中，会有一个时间点需要发布多版本，就像windows会有家庭版，企业版一样，这些版本都是基于基础版本上开发的，在github上创建分支就有点像创建家庭版，企业版分支一样，可以帮助开发者单独开发各个版本，不让各分支相互影响。</p><p>创建名为    feature    的分支（可以为中文）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch feature</span><br></pre></td></tr></table></figure><p>切换分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout feature</span><br></pre></td></tr></table></figure><p>上传分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin feature</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p>标签与分支相互独立，互不影响</p><p>创建名为    v1.0    标签（可以为中文）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag v1.0</span><br></pre></td></tr></table></figure><p>共享标签（同步标签到远端）</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin v1.0</span><br></pre></td></tr></table></figure><p><strong>共享的标签标记最近的一次项目提交</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;分支&quot;&gt;&lt;a href=&quot;#分支&quot; class=&quot;headerlink&quot; title=&quot;分支&quot;&gt;&lt;/a&gt;分支&lt;/h4&gt;&lt;p&gt;开发项目过程中，会有一个时间点需要发布多版本，就像windows会有家庭版，企业版一样，这些版本都是基于基础版本上开发的，在github上创建分支就有点像创建家庭版，企业版分支一样，可以帮助开发者单独开发各个版本，不让各分支相互影响。&lt;/p&gt;
&lt;p&gt;创建名为    feature    的分支（可以为中文）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch feature&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;切换分支&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout feature&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上传分支&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin feature&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>上传本地代码到Github</title>
    <link href="http://yoursite.com/2019/08/15/%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E5%88%B0Github/"/>
    <id>http://yoursite.com/2019/08/15/上传本地代码到Github/</id>
    <published>2019-08-15T11:23:07.000Z</published>
    <updated>2019-08-17T16:04:52.812Z</updated>
    
    <content type="html"><![CDATA[<h4 id="上传新代码"><a href="#上传新代码" class="headerlink" title="上传新代码"></a>上传新代码</h4><p><strong>1.在Github上创建仓库，仓库下需要README.md文件</strong></p><p><strong>2.在要上传的文件夹下右击，选择Git Bush Here</strong></p><p><strong>3.创建 .git文件</strong></p><p>输入        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><a id="more"></a><p>4.查看当前文件状态，红色表示没有上传到中间站的本地文件**</p><p>输入        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><img src="/2019/08/15/上传本地代码到Github/1.png" title="This is an image"><p><strong>5.关联需要上传的仓库地址</strong></p><p>输入        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin +仓库地址</span><br><span class="line">`</span><br></pre></td></tr></table></figure><img src="/2019/08/15/上传本地代码到Github/2.png" title="This is an image"><p><strong>6.下载README.md文件</strong></p><p>输入        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure><p><strong>7.上传所有文件到中转站</strong></p><p>输入        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add --all</span><br></pre></td></tr></table></figure><p><strong>8.查看当前文件状态，绿色表示没有上传到远端的中转站文件</strong></p><p>输入    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><img src="/2019/08/15/上传本地代码到Github/3.png" title="This is an image"><p><strong>9.给本次上传添加注释</strong></p><p>输入        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;添加注释&quot;</span><br></pre></td></tr></table></figure><img src="/2019/08/15/上传本地代码到Github/5.png" title="This is an image"><p><strong>10.上传至远端</strong></p><p>输入        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><img src="/2019/08/15/上传本地代码到Github/4.png" title="This is an image"><h4 id="上传修改代码"><a href="#上传修改代码" class="headerlink" title="上传修改代码"></a>上传修改代码</h4><p><strong>1.查看当前文件状态，红色表示没有上传到中间站的本地文件</strong></p><p>输入        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p><strong>2.上传所有文件到中转站</strong></p><p>输入        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add --all</span><br></pre></td></tr></table></figure><p><strong>3.查看当前文件状态，绿色表示没有上传到远端的中转站文件</strong></p><p>输入    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p><strong>4.给本次上传添加注释</strong></p><p>输入        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;添加注释&quot;</span><br></pre></td></tr></table></figure><p><strong>5.上传至远端</strong></p><p>输入        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;上传新代码&quot;&gt;&lt;a href=&quot;#上传新代码&quot; class=&quot;headerlink&quot; title=&quot;上传新代码&quot;&gt;&lt;/a&gt;上传新代码&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;1.在Github上创建仓库，仓库下需要README.md文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.在要上传的文件夹下右击，选择Git Bush Here&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.创建 .git文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;输入        &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>搭建博客遇到的问题</title>
    <link href="http://yoursite.com/2019/08/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/08/14/搭建博客遇到的问题/</id>
    <published>2019-08-14T09:50:16.000Z</published>
    <updated>2019-08-15T12:18:36.252Z</updated>
    
    <content type="html"><![CDATA[<p><strong>安装好Node和Git后</strong></p><p>随便找个地方建立文件夹，进入文件后右击选择Bash Here，不要使用cmd</p><p><strong>初试化Git</strong></p><p>git config –global user.name ‘CodeVenom99’</p><p>git config –global user.email ‘1060401004@qq.com’</p><h5 id="config-yml可以使用Sublime-Text-3来编辑（冒号后需要空格）"><a href="#config-yml可以使用Sublime-Text-3来编辑（冒号后需要空格）" class="headerlink" title="_config.yml可以使用Sublime Text 3来编辑（冒号后需要空格）"></a><strong>_config.yml可以使用Sublime Text 3来编辑（冒号后需要空格）</strong></h5><p>deploy:<br>  type: git<br>  repo:填入自己的http<br>  branch: master</p><a id="more"></a><p><strong>hexo s 建立本地博客 localhost:4000</strong></p><p>不输入hexo s无法访问本地博客 </p><p>ctrl+c断开与本地博客的连接</p><p><strong>若出现Spawm failed</strong></p><p>可以在_config.yml下的repo填写http地址而不是ssh</p><p><strong>yilia左边导航栏里的所有文章需要如下配置</strong></p><img src="/2019/08/14/搭建博客遇到的问题/imag.jpg" title="This is an image"><p>1,node在6.0以上，最好装v10.15.3</p><p>2，需要安装  cnpm install hexo-generator-json-content –save </p><p>3,在博客根目录下的_config.yml的最后添加（不要动格式！！！）</p><p>jsonContent:<br>  meta: false<br>  pages: false<br>  posts:<br>    title: true<br>    date: true<br>    path: true<br>    text: false<br>    raw: false<br>    content: false<br>    slug: false<br>    updated: false<br>    comments: false<br>    link: false<br>    permalink: false<br>    excerpt: false<br>    categories: false<br>    tags: true</p><p><strong>hexo d    显示成功，但是刷不出页面</strong></p><p>远端博客需要一段时间来反应（看具体情况，有快有慢）</p><p>选个好一点的网络</p><p><strong>在输入hexo d之后有ERROR Deployer not found：git</strong></p><p>换好一点的网络或者热点</p><p>重装cnpm install hexo-generator-json-content –save</p><p><strong>yilia想改下aboutme里面的介绍：</strong></p><p>以下是我所用到的HTML的标签（不是学这个的，一开始还试了\r\n，哈哈😄）</p><p>“&lt;br&gt;”代表换行</p><p>&amp;nbsp ; 代表空格，输入的时候分号后面还需要一个空格</p><p><strong>编辑玩博文之后hexo g出现大量警告</strong></p><p>检查博文的tags：，冒号后面必须有一个<strong><em>空格</em></strong></p><img src="/2019/08/14/搭建博客遇到的问题/1.png" title="This is an image"><img src="/2019/08/14/搭建博客遇到的问题/2.png" title="This is an image"><img src="/2019/08/14/搭建博客遇到的问题/3.png" title="This is an image"><p><strong>显示图片</strong></p><p>更改博客根目录下的_config.yml，post_asset_folder: true。之后创建的文章在 _posts文件夹下会创建与其名字相同的文件夹，可以将本篇文章需要用到的图片放置在该文件下，在Typora使用下面语句来调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img imag.jpg This is an image %&#125;</span><br></pre></td></tr></table></figure><p>img.jpg改为图片的名字</p><p><strong>文章如何显示摘要</strong></p><p>点击主页时，发现所有文章都是全文显示，不利于查找，可控制显示的字数</p><p>在你 MD 格式文章正文插入  &lt;!– more –&gt;  即可，只会显示它之前的，此后的就不显示，点击文章标题，全文阅读才可看到，同时在themes/yilia/_config.yml下注释掉         # excerpt_link: more </p><p><strong>核心命令</strong></p><p>hexo clean        清空缓存</p><p>hexo g                生成hexo</p><p>hexo s                生成本地博客 ，可以去localhost:4000，看情况</p><p>hexo d                发布到远端</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;安装好Node和Git后&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;随便找个地方建立文件夹，进入文件后右击选择Bash Here，不要使用cmd&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;初试化Git&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;git config –global user.name ‘CodeVenom99’&lt;/p&gt;
&lt;p&gt;git config –global user.email ‘1060401004@qq.com’&lt;/p&gt;
&lt;h5 id=&quot;config-yml可以使用Sublime-Text-3来编辑（冒号后需要空格）&quot;&gt;&lt;a href=&quot;#config-yml可以使用Sublime-Text-3来编辑（冒号后需要空格）&quot; class=&quot;headerlink&quot; title=&quot;_config.yml可以使用Sublime Text 3来编辑（冒号后需要空格）&quot;&gt;&lt;/a&gt;&lt;strong&gt;_config.yml可以使用Sublime Text 3来编辑（冒号后需要空格）&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;deploy:&lt;br&gt;  type: git&lt;br&gt;  repo:填入自己的http&lt;br&gt;  branch: master&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hello,新世界</title>
    <link href="http://yoursite.com/2019/08/14/Hello-%E6%96%B0%E4%B8%96%E7%95%8C/"/>
    <id>http://yoursite.com/2019/08/14/Hello-新世界/</id>
    <published>2019-08-14T09:19:30.000Z</published>
    <updated>2019-08-15T03:38:48.831Z</updated>
    
    <content type="html"><![CDATA[<p>在忙碌了两天，终于有了自己的一片小天地；</p><p>在打开自己的博客地址<a href="https://codevenom99.github.io/" target="_blank" rel="noopener">https://codevenom99.github.io/</a>  后看到自己的博客慢慢的加载下来，充满喜悦。他不是QQ空间，微博，朋友圈。这是自己的天地，满足自己内心的归属感。愿在这上面分享自己的学习经历，愿在这里遇上志同道合的朋友。</p><p>感谢Codesheep和Litten的技术支持</p><p><a href="https://space.bilibili.com/384068749?spm_id_from=333.788.b_765f7570696e666f.1" target="_blank" rel="noopener">https://space.bilibili.com/384068749?spm_id_from=333.788.b_765f7570696e666f.1</a></p><p><a href="http://litten.me/" target="_blank" rel="noopener">http://litten.me/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在忙碌了两天，终于有了自己的一片小天地；&lt;/p&gt;
&lt;p&gt;在打开自己的博客地址&lt;a href=&quot;https://codevenom99.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://codevenom99.github.
      
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
